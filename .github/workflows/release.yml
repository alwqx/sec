name: build-go-binary

on:
  release:
    types: [created] # 表示在创建新的 Release 时触发

jobs:
  build-go-binary:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin] # 需要打包的系统
        goarch: [amd64, arm64] # 需要打包的架构
        exclude: # 排除某些平台和架构
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v4

      - name: Set SEC_VERSION env
        run: echo SEC_VERSION=$(git describe --tags --always) >> ${GITHUB_ENV}
      - name: Set SEC_DEBUG_INFO env
        run: echo SEC_DEBUG_INFO=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set BUILD_TIME env
        run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}
      - name: Environment Printer
        uses: managedkaos/print-env@v1.0

      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # 一个默认的变量，用来实现往 Release 中添加文件
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.22 # 可以指定编译使用的 Golang 版本
          binary_name: "sec" # 可以指定二进制文件的名称
          extra_files: README.md # 需要包含的额外文件
          project_path: "./"
          build_flags: -v
          ldflags: -X "github.com/alwqx/sec/version.Version=${{ env.SEC_VERSION }}" -X "github.com/alwqx/sec/version.BuildTime=${{ env.BUILD_TIME }}" -X github.com/alwqx/sec/version.GitCommit=${{ github.sha }} -X github.com/alwqx/sec/version.GitRef=${{ github.ref }}
